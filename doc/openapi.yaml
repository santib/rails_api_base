---
openapi: 3.0.3
info:
  title: rails_api_base
  version: 1.0.0
servers: []
paths:
  "/api/v1/settings/must_update":
    get:
      summary: must_update
      tags:
      - Api::V1::Setting
      parameters:
      - name: device_version
        in: query
        required: false
        schema:
          type: string
        example: '1.0'
      responses:
        '200':
          description: returns it needs to update
          content:
            application/json:
              schema:
                type: object
                properties:
                  must_update:
                    type: boolean
                required:
                - must_update
              example:
                must_update: true
  "/api/v1/status":
    get:
      summary: status
      tags:
      - Api::V1::Api
      responses:
        '200':
          description: returns status 200 ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  online:
                    type: boolean
                required:
                - online
              example:
                online: true
  "/api/v1/user":
    put:
      summary: update
      tags:
      - Api::V1::User
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: ffSvSDiILwan46fM9Arbfw
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: okdr7HPAfFFQHa7w2KXEtg
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: lieselotte_huel@murray.example
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    username:
                      type: string
              required:
              - user
            example:
              user:
                email: notanemail
                username: new username
      responses:
        '400':
          description: returns the error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        items:
                          type: string
                    required:
                    - email
                required:
                - errors
              example:
                errors:
                  email:
                  - is not an email
        '200':
          description: updates the user
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      name:
                        type: string
                      username:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      uid:
                        type: string
                      provider:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - id
                    - email
                    - name
                    - username
                    - first_name
                    - last_name
                    - uid
                    - provider
                    - created_at
                    - updated_at
                required:
                - user
              example:
                user:
                  id: 9
                  email: woodrow_hilll@bosco-dare.test
                  name: new username
                  username: new username
                  first_name: ''
                  last_name: ''
                  uid: woodrow_hilll@bosco-dare.test
                  provider: email
                  created_at: '2023-10-16T13:48:08.222Z'
                  updated_at: '2023-10-16T13:48:08.368Z'
        '422':
          description: returns the missing params error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: A required param is missing
    get:
      summary: show
      tags:
      - Api::V1::User
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: H6AGPFQpJkTa84AjVGMYZQ
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: "-plx2kDHtDmjsmoKWYaIrQ"
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: roberto@mclaughlin.test
      responses:
        '200':
          description: does not return a Set-Cookie Header
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      name:
                        type: string
                      username:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      uid:
                        type: string
                      provider:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - id
                    - email
                    - name
                    - username
                    - first_name
                    - last_name
                    - uid
                    - provider
                    - created_at
                    - updated_at
                required:
                - user
              example:
                user:
                  id: 22
                  email: foster@pfeffer.example
                  name: emile
                  username: emile
                  first_name: ''
                  last_name: ''
                  uid: foster@pfeffer.example
                  provider: email
                  created_at: '2023-10-16T13:48:09.343Z'
                  updated_at: '2023-10-16T13:48:09.411Z'
        '404':
          description: returns status 404 not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Couldn't find the record
  "/api/v1/users":
    post:
      summary: create
      tags:
      - Api::V1::Registration
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    username:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
                    first_name:
                      type: string
                    last_name:
                      type: string
                  required:
                  - username
                  - email
                  - password
                  - password_confirmation
                  - first_name
                  - last_name
              required:
              - user
            example:
              user:
                username: test
                email: invalid_email
                password: '12345678'
                password_confirmation: '12345678'
                first_name: Johnny
                last_name: Perez
      responses:
        '200':
          description: does not raise an error
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      name:
                        type: string
                      username:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      uid:
                        type: string
                      provider:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - id
                    - email
                    - name
                    - username
                    - first_name
                    - last_name
                    - uid
                    - provider
                    - created_at
                    - updated_at
                required:
                - user
              example:
                user:
                  id: 26
                  email: test@example.com
                  name: Johnny Perez
                  username: test
                  first_name: Johnny
                  last_name: Perez
                  uid: test@example.com
                  provider: email
                  created_at: '2023-10-16T13:48:09.762Z'
                  updated_at: '2023-10-16T13:48:09.831Z'
        '422':
          description: does not return a successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        nullable: true
                      email:
                        type: string
                      allow_password_change:
                        type: boolean
                      first_name:
                        type: string
                      last_name:
                        type: string
                      username:
                        type: string
                      created_at:
                        nullable: true
                      updated_at:
                        nullable: true
                      provider:
                        type: string
                      uid:
                        type: string
                    required:
                    - id
                    - email
                    - allow_password_change
                    - first_name
                    - last_name
                    - username
                    - created_at
                    - updated_at
                    - provider
                    - uid
                  errors:
                    type: object
                    properties:
                      password:
                        type: array
                        items:
                          type: string
                      full_messages:
                        type: array
                        items:
                          type: string
                      password_confirmation:
                        type: array
                        items:
                          type: string
                      email:
                        type: array
                        items:
                          type: string
                    required:
                    - full_messages
                required:
                - status
                - data
                - errors
              example:
                status: error
                data:
                  id: 
                  email: invalid_email
                  allow_password_change: false
                  first_name: Johnny
                  last_name: Perez
                  username: test
                  created_at: 
                  updated_at: 
                  provider: email
                  uid: invalid_email
                errors:
                  password:
                  - is too short (minimum is 8 characters)
                  full_messages:
                  - Email is not an email
                  password_confirmation:
                  - doesn't match Password
                  email:
                  - is not an email
  "/api/v1/users/password":
    post:
      summary: create
      tags:
      - Api::V1::Password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
              - email
            example:
              email: notvalid@example.com
      responses:
        '200':
          description: does not raise an error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                required:
                - success
                - message
              example:
                success: true
                message: An email has been sent to 'shanelle_cremin@veum.example'
                  containing instructions for resetting your password.
        '404':
          description: does not return a successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Unable to find user with email 'notvalid@example.com'.
    put:
      summary: update
      tags:
      - Api::V1::Password
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: 3Jvf-kCyydmYu2nuj4tgEQ
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: oF8vTQXkHmUMzg2AlXs5JQ
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: marica_connelly@yost.test
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
              - password
              - password_confirmation
            example:
              password: '123456789'
              password_confirmation: anotherpass
      responses:
        '200':
          description: returns a successful response
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      email:
                        type: string
                      provider:
                        type: string
                      uid:
                        type: string
                      id:
                        type: integer
                      allow_password_change:
                        type: boolean
                      first_name:
                        type: string
                      last_name:
                        type: string
                      username:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - email
                    - provider
                    - uid
                    - id
                    - allow_password_change
                    - first_name
                    - last_name
                    - username
                    - created_at
                    - updated_at
                  message:
                    type: string
                required:
                - success
                - data
                - message
              example:
                success: true
                data:
                  email: steven@ritchie.test
                  provider: email
                  uid: steven@ritchie.test
                  id: 1
                  allow_password_change: false
                  first_name: ''
                  last_name: ''
                  username: clair.von
                  created_at: '2023-10-16T13:48:07.207Z'
                  updated_at: '2023-10-16T13:48:07.579Z'
                message: Your password has been successfully updated.
        '422':
          description: does not change the password if confirmation does not match
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  errors:
                    type: object
                    properties:
                      password_confirmation:
                        type: array
                        items:
                          type: string
                      full_messages:
                        type: array
                        items:
                          type: string
                    required:
                    - password_confirmation
                    - full_messages
                required:
                - success
                - errors
              example:
                success: false
                errors:
                  password_confirmation:
                  - doesn't match Password
                  full_messages:
                  - Password confirmation doesn't match Password
  "/api/v1/users/password/edit":
    get:
      summary: edit
      tags:
      - Api::V1::Password
      parameters:
      - name: redirect_url
        in: query
        required: false
        schema:
          type: string
        example: localhost
      - name: reset_password_token
        in: query
        required: false
        schema:
          type: string
        example: VxCBqVaK1nXKJUdtaxLS
      responses:
        '302':
          description: returns the uid
          content:
            text/html:
              schema:
                type: string
              example: <html><body>You are being <a href="http://www.example.com://localhost?access-token=2Fsqu5c6GmL23z9Ao332wQ&amp;client=LJ1t2-OL8F2Z28MJbhdUXw&amp;client_id=LJ1t2-OL8F2Z28MJbhdUXw&amp;config=&amp;expiry=1760622488&amp;reset_password=true&amp;token=2Fsqu5c6GmL23z9Ao332wQ&amp;uid=charley.stamm%40doyle.test">redirected</a>.</body></html>
  "/api/v1/users/sign_in":
    post:
      summary: create
      tags:
      - Api::V1::Session
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - user
            example:
              user:
                email: jammie.jenkins@tillman-mraz.example
                password: wrong_password!
      responses:
        '200':
          description: does not raise an error
          headers:
            access-token:
              schema:
                type: string
            expiry:
              schema:
                type: integer
            token-type:
              schema:
                type: string
            uid:
              schema:
                type: string
            client:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      email:
                        type: string
                      name:
                        type: string
                      username:
                        type: string
                      first_name:
                        type: string
                      last_name:
                        type: string
                      uid:
                        type: string
                      provider:
                        type: string
                      created_at:
                        type: string
                      updated_at:
                        type: string
                    required:
                    - id
                    - email
                    - name
                    - username
                    - first_name
                    - last_name
                    - uid
                    - provider
                    - created_at
                    - updated_at
                required:
                - user
              example:
                user:
                  id: 7
                  email: shaunte@gorczany.test
                  name: valentina
                  username: valentina
                  first_name: ''
                  last_name: ''
                  uid: shaunte@gorczany.test
                  provider: email
                  created_at: '2023-10-16T13:48:08.332Z'
                  updated_at: '2023-10-16T13:48:08.414Z'
        '401':
          description: return errors upon failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: Invalid login credentials. Please try again.
  "/api/v1/users/sign_out":
    delete:
      summary: destroy
      tags:
      - Api::V1::Session
      responses:
        '404':
          description: returns not found response
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
              example:
                error: User was not found or was not logged in.
        '200':
          description: returns a successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                required:
                - success
              example:
                success: true
      parameters:
      - name: access-token
        in: header
        required: true
        schema:
          type: string
        example: FdlJWnQA_eCalbjIv26vkw
      - name: client
        in: header
        required: true
        schema:
          type: string
        example: pY7jL9qaRF_1gF9yz7TDJg
      - name: uid
        in: header
        required: true
        schema:
          type: string
        example: keith@schiller.example
